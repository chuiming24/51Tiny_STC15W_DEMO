C51 COMPILER V9.00   MIAN                                                                  07/13/2017 15:16:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN mian.OBJ
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE mian.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************************************************************
   2          ×÷Õß£ºÌ×Ì×
   3          ÓÊÏä£º2011543651@qq.com
   4          ¹¦ÄÜ£ºÓÃÓÚÑÝÊ¾STC15Ê¹ÓÃtiny51ÏµÍ³µÄÀý×Ó
   5                          Ê¹ÓÃ×Ô¼ºÐ´µÄº¯ÊýÒÔ¼°ÏµÍ³×Ô´øµÄ±ê×¼ÊäÈëÊä³öº¯ÊýÀ´½øÐÐ´®¿ÚÊä³ö
   6                          Ê¹ÓÃ×Ô´øµÄÈÎÎñÐÅºÅº¯Êý½øÐÐ½»Á÷
   7          
   8          **********************************************************************/
   9          #include <rtx51tny.h>
  10          #include <config.H>
  11          #include <stdio.h>
  12          #include <usar.h>
  13          
  14          #define os_enter_critical() ET0=0
  15          #define os_exit_critical()      ET0=1
  16          
  17          char code menu[] = 
  18             "\n"
  19             "+********* SERIAL PRINT using C51 and RTX-51 tiny ***************+\n"
  20             "| This program is a simple example with serial.                  |\n"
  21             "|                                          ----taotao            |\n"
  22             "+----------------------------------------------------------------+\n";
  23          
  24          
  25          /**********************************************************************
  26                  µÚÒ»¸öÈÎÎñ£¬ÓÃÓÚ³õÊ¼»¯¡£
  27          **********************************************************************/
  28          void Init() _task_ 0  {                  
  29   1              os_create_task (1);               //´´½¨µÚÒ»¸öÈÎÎñ      
  30   1              os_create_task (2);               //´´½¨µÚ¶þ¸öÈÎÎñ              
  31   1              UartInit();                               //½øÐÐ´®¿ÚµÄ³õÊ¼»¯    
  32   1      
  33   1              os_delete_task (0);               //³õÊ¼»¯Íê±Ï£¬É¾³ý×ÔÉíÈÎÎñ
  34   1      }
  35          
  36          /**********************************************************************
  37                  µÚ¶þ¸öÈÎÎñ£¬Ê¹ÓÃSendStringº¯Êý½øÐÐ´®¿Ú·¢ËÍ
  38          **********************************************************************/
  39          void LED1() _task_ 1{
  40   1              while (1)  {
  41   2                      SendString("send data\n\r");
  42   2                      os_wait2 (K_TMO, 50); //µÈ´ý25¸öÏµÍ³ÖÜÆÚ£¬Ô¼0.25Ãë
  43   2                      os_send_signal (2);   //·¢ËÍÐÅºÅ¸øÈÎÎñ±àºÅ2£¬Ò²¾ÍÊÇµÚÈý¸öÈÎÎñ
  44   2                                                                      //º¯Êýos_send_signal¸øÒ»¸öÖ¸¶¨ÈÎÎñ£¨ÓÃtask_idÀ´±êÃ÷£©·¢ËÍÐÅºÅ¡£Èç¹û¸ÃÈÎÎñÒÑ¾­ÔÚµÈ´ýÐÅºÅ£¬ÄÇÃ´Õâ¸öº
             -¯Êý¾ÍÈÃÕâ¸öÖ¸¶¨ÈÎÎñ½øÈë¾ÍÐ÷×´Ì¬×¼±¸ÔËÐÐ£¬µ±È»Õâ¸öº¯Êý²¢Ã»ÓÐÆô¶¯Ò»¸öÈÎÎñµÄ¹¦ÄÜ¡£Èç¹ûËùÖ¸¶¨µÄÈÎÎñ»¹Ã»ÓÐÔÚµÈ´ýÐÅºÅ£¬ÄÇÃ´Õâ¸
             -öÐÅºÅÒ²±£´æÔÚ¸ÃÖ¸¶¨ÈÎÎñµÄÐÅºÅ±êÖ¾ÖÐ¡£
  45   2                      os_wait2 (K_TMO, 150); //µÈ´ý25¸öÏµÍ³ÖÜÆÚ£¬Ô¼0.75Ãë
  46   2              }
  47   1      }
  48          
  49          /**********************************************************************
  50                  µÚÈý¸öÈÎÎñ£¬Ê¹ÓÃ±ê×¼ÊäÈëÊä³öµÄprintfÀ´½øÐÐ´®¿Ú·¢ËÍ
  51          **********************************************************************/
  52          void LED2() _task_ 2{
  53   1              
C51 COMPILER V9.00   MIAN                                                                  07/13/2017 15:16:32 PAGE 2   

  54   1              while(1){
  55   2                      os_wait2 (K_TMO, 220);             //µÈ´ý½ÓÊÜÐÅºÅ
  56   2                                                                                              //º¯Êýos_wait¿ÉÒÔÔÝÍ£µ±Ç°ÈÎÎñ²¢µÈ´ýÒ»¸ö»òÕß¼¸¸öÊÂ¼þ£¬ÀýÈç£ºÊ±¼ä¼ä¸ô¡¢³¬Ê±»òÕß´ÓÁíÍâÒ»¸öÈÎÎñ»òÖÐ
             -¶Ï·¢³öµÄÐÅºÅ¡£
  57   2                                                                                              //µÚÒ»¸ö²ÎÊýÓÐÈýÖÖ´«Èë·½·¨£ºK_IVL       µÈ´ýÒ»¸öÊ±¼ä¼ä¸ôÊÂ¼þ£¬Ò²¾ÍÊÇÑÓÊ±
  58   2                                                                                                                                                //K_SIG       µÈ´ýÒ»¸öÐÅºÅ
  59   2                                                                                                                                                //K_TMO       µÈ´ýÒ»¸öÐÅºÅ£¬²¢½øÐÐ³¬Ê±ÅÐ¶¨¡£
  60   2                      printf(menu);                              //·¢ËÍ×Ö·ûÊý×é                       
  61   2              }
  62   1      }
  63          
  64          
  65          //void main(){
  66          //      Timer1Init();
  67          //      EA = 1;
  68          //      while(1){
  69          //              ;
  70          //      }
  71          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     66    ----
   CONSTANT SIZE    =    282    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
